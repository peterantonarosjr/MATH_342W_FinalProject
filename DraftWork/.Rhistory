annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
geom_density(data = subset(housingData, !is.na(sale_price)),aes(x=sale_price))
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
geom_density(data = subset(housingData, !is.na(sale_price)),aes(x=sale_price))+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(data = subset(housingData, !is.na(sale_price)),aes(x=sale_price))+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(data = subset(housingData, !is.na(sale_price)),aes(x=sale_price))
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_line(aes(y = ..density.., colour = 'Empirical'), stat = 'density') +
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_line(aes(y = sale_price, colour = 'Empirical'), stat = 'density') +
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_line(aes(y = na.omit(sale_price), colour = 'Empirical'), stat = 'density') +
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
stat_function(
fun = dnorm,
args = list(mean = mean(housingData$sale_price), sd = sd(housingData$sale_price)),
lwd = 2,
col = 'red'
)
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
stat_function(
fun = dnorm,
args = list(mean = mean(housingData$sale_price), sd = sd(housingData$sale_price)),
lwd = 2,
col = 'red'
)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
stat_function(
fun = dnorm,
args = list(mean = mean(housingData$sale_price), sd = sd(housingData$sale_price)),
lwd = 2,
col = 'red'
)
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(col = "red")
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(col = "red")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(data=subset(housingData, !is.na(sale_price)),aes(x=sale_price),col = "red")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "red")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "green")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "green")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(y=..density..) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "green")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "green")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(aes(y=..density..),bins = 50L, fill = "blue")+
geom_density(aes(x=sale_price),col = "green")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(aes(y=..density..),fill = "blue")+
geom_density(aes(x=sale_price),col = "green")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_density(aes(y=..density..))
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue",size=3)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=2)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=40, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=40, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")+
ggsave("SalePriceHist.png",width=6, height=4,dpi=300)
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggsave("SalePriceHist.png",width=6, height=4,dpi=300)
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggsave("SalePriceHist.png",width=4, height=3,dpi=400)
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")
ggsave("SalePriceHist.png",width=6, height=4,dpi=400)
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")+
heme(plot.title = element_text(hjust = 0.5))
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")+
theme(plot.title = element_text(hjust = 0.5))
#
#
#
# USE HOLDOUT SET FOR GENERLIZATION ERROR FOR RANDOM FORESTS
#
#
ggplot(data=subset(housingData, !is.na(sale_price))) +
aes(x = sale_price) +
geom_histogram(bins = 50L, fill = "blue")+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = mean(sale_price)), color = "red",size=1)+
annotate("text", x=290000, y=45, label=paste("Mean"),size=4.1,angle=90)+
geom_vline(data = subset(housingData, !is.na(sale_price)), aes(xintercept = median(sale_price)), color = "yellow",size=1)+
annotate("text", x=230000, y=45, label=paste("Median"),size=4.1,angle=90)+
labs(x = "Sale Price", y = "Frequency")+
ggtitle("Histogram of Sale Price")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("SalePriceHist.png",width=6, height=4,dpi=400)
sapply(housingData,class)
summary(finalHousingData)
summary(finalHousingData)
str(finalHousingData)
